{"version":3,"sources":["components/AddCategory.js","components/GifGridItem.js","helpers/getGifs.js","components/GifGrid.js","hooks/useFetchGifs.js","GisftExpertApp.jsx","index.js"],"names":["AddCategory","props","setCategories","useState","inputValue","setinputValue","onSubmit","e","preventDefault","trim","length","catego","console","log","type","value","onChange","target","GifGridItem","id","title","url","className","src","alt","getGifts","category","a","encodeURI","fetch","resp","json","data","gifs","map","img","images","downsized_medium","GifGrid","loading","state","setstate","useEffect","then","useFetchGifs","key","GifExpertApp","categories","ReactDOM","render","document","getElementById"],"mappings":"6MAGe,SAASA,EAAYC,GAAQ,IAEjCC,EAAeD,EAAfC,cAFgC,EAIHC,mBAAS,IAJN,mBAIhCC,EAJgC,KAIpBC,EAJoB,KAuBvC,OACI,0BAAMC,SAbQ,SAACC,GACfA,EAAEC,iBAECJ,EAAWK,OAAOC,OAAO,IAC5BR,GAAc,SAAAS,GAAM,OAAGP,GAAH,mBAAiBO,OACrCN,EAAc,KAIdO,QAAQC,IAAI,kBAKR,2BACIC,KAAK,OACLC,MAAOX,EACPY,SAtBY,SAACT,GAErBF,EAAcE,EAAEU,OAAOF,WCTxB,IAAMG,EAAc,SAAC,GAAuB,EAArBC,GAAsB,IAAlBC,EAAiB,EAAjBA,MAAOC,EAAU,EAAVA,IAIrC,OACI,yBAAKC,UAAU,iEACX,yBAAKC,IAAKF,EAAKG,IAAKJ,IACpB,2BAAIA,K,uBCNHK,EAAQ,uCAAG,WAAOC,GAAP,uBAAAC,EAAA,6DACdN,EADc,iDACkCO,UAAUF,GAD5C,+DAEDG,MAAMR,GAFL,cAEdS,EAFc,gBAIGA,EAAKC,OAJR,uBAIZC,EAJY,EAIZA,KACFC,EAAOD,EAAKE,KAAI,SAAAC,GAAQ,IAAD,EAEzB,MAAO,CACHhB,GAAIgB,EAAIhB,GACRC,MAAOe,EAAIf,MACXC,IAAG,UAAEc,EAAIC,cAAN,aAAE,EAAYC,iBAAiBhB,QAVtB,kBAebY,GAfa,4CAAH,sDCERK,EAAU,SAAC,GAAkB,IAAhBZ,EAAe,EAAfA,SAAe,ECDb,SAACA,GAAc,IAAD,EAEZvB,mBAAS,CAC/B6B,KAAM,GACNO,SAAS,IAJyB,mBAE/BC,EAF+B,KAExBC,EAFwB,KAqBtC,OAdAC,qBAAU,WAENjB,EAASC,GACJiB,MAAK,SAAAR,GAEFM,EAAS,CACLT,KAAMG,EACNI,SAAS,SAKtB,CAACb,IAEGc,EDjBuBI,CAAalB,GAA/BU,EAHyB,EAG9BJ,KAAYO,EAHkB,EAGlBA,QAEnB,OACI,oCACI,4BAAKb,GAEJa,GAAS,uBAAGjB,UAAU,sCAAb,WAER,yBAAKA,UAAU,aAEZc,EAAOF,KAAI,SAACC,GAAD,OACR,kBAAC,EAAD,eACIU,IAAKV,EAAIhB,IAELgB,UElBb,SAASW,IAAgB,IAAD,EACD3C,mBAAS,CAAC,cADT,mBAC9B4C,EAD8B,KAClB7C,EADkB,KASrC,OACE,oCACE,2CACA,kBAACF,EAAD,CAAaE,cAAeA,IAC5B,6BAIA,4BACG6C,EAAWb,KAAI,SAACR,GAAD,OACd,kBAAC,EAAD,CAASA,SAAUA,EAAUmB,IAAKnB,SCjB5CsB,IAASC,OACP,kBAAC,EAAD,MACAC,SAASC,eAAe,U","file":"static/js/main.2fe75516.chunk.js","sourcesContent":["import React,{useState} from 'react'\nimport Proptypes from 'prop-types';\n\nexport default function AddCategory(props) {\n\n    const {setCategories}=props;\n\n    const [inputValue, setinputValue] = useState('')\n\n    const handleInputChange=(e)=>{\n        //setinputValue(e.target.value)\n        setinputValue(e.target.value);\n    }\n\n    const hadleSubmit=(e)=>{\n        e.preventDefault();\n\n        if(inputValue.trim().length>2){\n        setCategories(catego=>[inputValue,...catego])\n        setinputValue(\"\")\n        }\n\n        \n        console.log(\"submit hecho\")\n    }\n\n    return (\n        <form onSubmit={hadleSubmit}>        \n            <input\n                type=\"text\"\n                value={inputValue}\n                onChange={handleInputChange}\n\n            />\n        </form>\n    )\n}\n\n\nAddCategory.propTypes={\n    setCategories:Proptypes.func.isRequired\n}","import React from 'react'\n\nexport const GifGridItem = ({ id, title, url }) => {\n\n    //console.log(id, title, url)\n\n    return (\n        <div className=\"card animate__animated animate__bounce animate__fadeInDownBig\">\n            <img src={url} alt={title} />\n            <p>{title}</p>\n        </div>\n    )\n}\n","\n\n\nexport const getGifts = async (category) => {\n    const url = `https://api.giphy.com/v1/gifs/search?q=${encodeURI(category)}&limit=10&api_key=YVgDnq8onXD5H0wcMM9WUeGQf19SGxfm`\n    const resp = await fetch(url)\n\n    const { data } = await resp.json();\n    const gifs = data.map(img => {\n\n        return {\n            id: img.id,\n            title: img.title,\n            url: img.images?.downsized_medium.url\n        }\n        \n    })\n    // console.log(gifs)\n    return gifs;\n}","import React  from 'react'\nimport { GifGridItem } from './GifGridItem';\n//import { getGifts } from '../helpers/getGifs';\nimport { useFetchGifs } from '../hooks/useFetchGifs';\n\nexport const GifGrid = ({ category }) => {\n\n    // const [images, setImages] = useState([])    \n    const {data:images,loading} = useFetchGifs(category);  \n\n    return (\n        <>\n            <h3>{category}</h3>\n\n            {loading&&<p className=\"animate__animated animate__bounce \">Loading</p>}\n\n            { <div className=\"card-grid\">\n\n                {images.map((img) => (\n                    <GifGridItem\n                        key={img.id}\n                        // img={img}\n                        {...img}\n                    />\n                ))}\n\n            </div> }\n        </>\n    )\n}\n","import { useState, useEffect } from 'react'\nimport { getGifts } from '../helpers/getGifs';\n\n\nexport const useFetchGifs = (category) => {\n\n    const [state, setstate] = useState({\n        data: [],\n        loading: true\n    })\n\n    useEffect(() => {\n\n        getGifts(category)\n            .then(img => {\n\n                setstate({\n                    data: img,\n                    loading: false\n                })\n\n            })\n\n    }, [category])\n\n    return state; //data:[], loading:true\n\n\n}","import React, { useState } from \"react\";\nimport AddCategory from \"./components/AddCategory\";\nimport { GifGrid } from \"./components/GifGrid\";\n\nexport default function GifExpertApp() {\n  const [categories, setCategories] = useState([\"One punch\"]);\n  //const categories = [\"One punch\",\"Samuray x\",\"Dragon ball \"]\n\n  // const handleAdd=()=>{\n  //     //setCategories([\"Hunter\", ...categories])\n  //     setCategories(categories=>[\"Hunter\",...categories])\n  // }\n\n  return (\n    <>\n      <h2>Hift Expert</h2>\n      <AddCategory setCategories={setCategories} />\n      <hr></hr>\n\n      {/* <button onClick={handleAdd}>Agregar</button> */}\n\n      <ol>\n        {categories.map((category) => (\n          <GifGrid category={category} key={category} />\n        ))}\n      </ol>\n    </>\n  );\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\n\nimport GiftExpertApp from './GisftExpertApp';\n\nReactDOM.render(\n  <GiftExpertApp/>,\n  document.getElementById('root')\n);\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\n\n"],"sourceRoot":""}